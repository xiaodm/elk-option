# Add the following properties to your standard elasticsearch.yml 
# (alongside with the SG SSL settings)
# This settings must always be the same on all nodes in the cluster

# Name of the index where searchguard stores its configuration.
# WARNING: Expert setting, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working
#searchguard.config_index_name: searchguard

# This defines the DNs (distinguished names) of certificates
# to which admin privileges should be assigned
searchguard.authcz.admin_dn:
  - "CN=kirk,OU=client,O=client,l=tEst, C=De"

# This is optional
# Only needed when impersonation is used
# Allow DNs (distinguished names) to impersonate as other users
#searchguard.authcz.impersonation_dn:
#  "CN=spock,OU=client,O=client,L=Test,C=DE":
#    - worf
#  "cn=webuser,ou=IT,ou=IT,dc=company,dc=com":
#    - user2
#    - user1

# Auditlog configuration:

# General settings
# Disable some categories
#searchguard.audit.config.disabled_categories = ["AUTHENTICATED"]
# Tune threadpool size, default is 10 and 0 means disabled
#searchguard.audit.threadpool.size: 0
# If enable_request_details is true then the audit log event will also contain
# details like the search query. Default is false. 
#searchguard.audit.enable_request_details: true

# Destination of the auditlog events
searchguard.audit.type: internal_elasticsearch
#searchguard.audit.type: external_elasticsearch
#searchguard.audit.type: debug
#searchguard.audit.type: webhook

# external_elasticsearch settings
#searchguard.audit.config.http_endpoints: ['localhost:9200','localhost:9201','localhost:9202']"
#searchguard.audit.config.index: auditlog # make sure you secure this index properly
#searchguard.audit.config.type: auditlog
#searchguard.audit.config.username: auditloguser
#searchguard.audit.config.password: auditlogpassword
#searchguard.audit.config.enable_ssl: false
#searchguard.audit.config.verify_hostnames: false
#searchguard.audit.config.enable_ssl_client_auth: false

# webhook settings
#searchguard.audit.config.webhook.url: "http://mywebhook/endpoint"
# One of URL_PARAMETER_GET,URL_PARAMETER_POST,TEXT,JSON,SLACK
#searchguard.audit.config.webhook.format: JSON
#searchguard.audit.config.webhook.ssl.verify: false

# If Kerberos authentication should be used you have to configure this:

# The absolute path or relative path to config/ directory
# to krb5.conf file
#searchguard.kerberos.krb5_filepath: '/etc/krb5.conf'
            
# The relative path to config/ directory
# to the keytab where the acceptor_principal credentials are stored.
#searchguard.kerberos.acceptor_keytab_filepath: 'eskeytab.tab'

# Acceptor (Server) Principal name, must be present in acceptor_keytab_path file
#searchguard.kerberos.acceptor_principal: 'HTTP/localhost'

# This defines the OID of server node certificates
# See https://github.com/floragunncom/search-guard-docs/blob/master/architecture.md
# WARNING: Expert setting, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working
#searchguard.cert.oid: '1.2.3.4.5.5'

# This specifies the implementation of com.floragunn.searchguard.transport.InterClusterRequestEvaluator
# that is used to determine inter cluster message.  The default is to use the oid value of 'searchguard.cert.oid'
# as described: https://github.com/floragunncom/search-guard-docs/blob/master/architecture.md
# Instance of com.floragunn.searchguard.transport.InterClusterRequestEvaluator must implement a single arg
# constructor that takes a org.elasticsearch.common.settings.Settings
# WARNING: Expert setting, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working
#searchguard.cert.intercluster_request_evaluator_class: com.floragunn.searchguard.transport.DefaultInterClusterRequestEvaluator

# Specify a list of DNs which denote the other nodes in the cluster.
# This is only necessary if one cannot use the OID mechanism and has a major drawback:
# Every time a new node want to join the cluster this setting must be updated a full cluster restart must be performed.
# This settings support wildcards and regular expressions
# WARNING: Expert setting, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working
# This setting does only have an effect if 'searchguard.cert.intercluster_request_evaluator_class' is not set.
# If 'searchguard.ssl.transport.principal_extractor_class' is set use the outcome of this as DN
#searchguard.nodes_dn:
#  - "CN=*.example.com, OU=SSL, O=Test, L=Test, C=DE"
#  - "CN=node.other.com, OU=SSL, O=Test, L=Test, C=DE"

# Allow snapshot restore for normal users
# By default only requests signed by an admin ssl certificate can do this
# To enable snapshot restore for normal users set 'searchguard.enable_snapshot_restore_privilege: true'
# The user who wants to restore a snapshot must have the 'cluster:admin/snapshot/restore' privilege and must also have
# "indices:admin/create" and "indices:data/write/index" for the indices to be restores.
# A snapshot can only be restored when it does not contain global state and does not restore the 'searchguard' index

# If 'searchguard.check_snapshot_restore_write_privileges: false' is set then the additional indices checks are omitted.
# This makes it less secure.

# WARNING: Expert settings, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working
#searchguard.enable_snapshot_restore_privilege: true
#searchguard.check_snapshot_restore_write_privileges: false
